<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_int23__t_8hpp" xml:lang="en-US">
<title>int23_t.hpp File Reference</title>
<indexterm><primary>int23_t.hpp</primary></indexterm>
<para>

<para>Main header file for int23_t library. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;bitset&gt;<?linebreak?>#include &lt;iostream&gt;<?linebreak?>#include &lt;string&gt;<?linebreak?>#include &lt;type_traits&gt;<?linebreak?></programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classint23__t_1_1uint23__t">int23_t::uint23_t</link></para>

<para>Unsigned 23 bit integer. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>char <link linkend="_int23__t_8hpp_1af5ade1fac67088c662c08a88e2358ae6">int23_t::fullAdder</link> (char const &amp;b1, char const &amp;b2, char &amp;carry)</para>

<para>An adder which adds carry and 2 bits together and calculates new carry and sum. </para>
</listitem>
            <listitem><para>char <link linkend="_int23__t_8hpp_1a4db13892bc7f11d6698b6bb72bf73a1f">int23_t::fullSub</link> (char const &amp;b1, char const &amp;b2, char &amp;borrow)</para>

<para>A substractor function, similar to the adder function. Substracts left side from right side. </para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_int23__t_8hpp_1a1914e870f88b2b77ef011daaab58f499">int23_t::operator&lt;&lt;</link> (std::ostream &amp;out, <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> const &amp;num)</para>

<para>Operator for outputting an <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> using std::ostream class. </para>
</listitem>
            <listitem><para>std::istream &amp; <link linkend="_int23__t_8hpp_1aebe3191c1e0c8e2c74e9c90b6d5e56b6">int23_t::operator&gt;&gt;</link> (std::istream &amp;in, <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> &amp;num)</para>

<para>Operator for inputting an <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> using std::istream class. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> <link linkend="_int23__t_8hpp_1a97213726943c4e3c6a9143c106e45b1b">int23_t::UINT23_MAX</link> (8388607)</para>
</listitem>
            <listitem><para>const <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> <link linkend="_int23__t_8hpp_1a394f88afbad92f3475abf5beb64a0315">int23_t::UINT23_MIN</link> (0)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Main header file for int23_t library. </para>

<para>Contiains Functions required to make uint23_t work </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_int23__t_8hpp_1af5ade1fac67088c662c08a88e2358ae6"/><section>
    <title>fullAdder()</title>
<indexterm><primary>fullAdder</primary><secondary>int23_t.hpp</secondary></indexterm>
<indexterm><primary>int23_t.hpp</primary><secondary>fullAdder</secondary></indexterm>
<para><computeroutput>char int23_t::fullAdder (char const &amp; b1, char const &amp; b2, char &amp; carry)</computeroutput></para><para>

<para>An adder which adds carry and 2 bits together and calculates new carry and sum. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>b1</entry><entry>
<para>Bit 1, left side of addition </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>b2</entry><entry>
<para>Bit 2, right side of addition </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>carry</entry><entry>
<para>Carry of the addition, passes the reference and updates it with the new carry </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_int23__t_8hpp_1a4db13892bc7f11d6698b6bb72bf73a1f"/><section>
    <title>fullSub()</title>
<indexterm><primary>fullSub</primary><secondary>int23_t.hpp</secondary></indexterm>
<indexterm><primary>int23_t.hpp</primary><secondary>fullSub</secondary></indexterm>
<para><computeroutput>char int23_t::fullSub (char const &amp; b1, char const &amp; b2, char &amp; borrow)</computeroutput></para><para>

<para>A substractor function, similar to the adder function. Substracts left side from right side. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>b1</entry><entry>
<para>Bit 1, left side of substraction </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>b2</entry><entry>
<para>Bit 2, right side of substraction </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>borrow</entry><entry>
<para>Borrow of the addition, passes the reference and updates it with new borrow </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_int23__t_8hpp_1a1914e870f88b2b77ef011daaab58f499"/><section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>int23_t.hpp</secondary></indexterm>
<indexterm><primary>int23_t.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream &amp; int23_t::operator&lt;&lt; (std::ostream &amp; out, <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> const &amp; num)</computeroutput></para><para>

<para>Operator for outputting an uint23_t using std::ostream class. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>out</entry><entry>
<para>Variable used for outputting, from std::ostream class like std::cout, see also <link xlink:href="https://en.cppreference.com/w/cpp/io/basic_ostream">https://en.cppreference.com/w/cpp/io/basic_ostream</link> </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>num</entry><entry>
<para>Variable thats outputted, from uint23_t class</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Converts uint23_t to std::string to output integer </para>
</section>
<anchor xml:id="_int23__t_8hpp_1aebe3191c1e0c8e2c74e9c90b6d5e56b6"/><section>
    <title>operator&gt;&gt;()</title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>int23_t.hpp</secondary></indexterm>
<indexterm><primary>int23_t.hpp</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<para><computeroutput>std::istream &amp; int23_t::operator&gt;&gt; (std::istream &amp; in, <link linkend="_classint23__t_1_1uint23__t">uint23_t</link> &amp; num)</computeroutput></para><para>

<para>Operator for inputting an uint23_t using std::istream class. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>in</entry><entry>
<para>Variable used for inputting, from std::istream class like std::cin, see also <link xlink:href="https://en.cppreference.com/w/cpp/io/basic_istream">https://en.cppreference.com/w/cpp/io/basic_istream</link> </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>num</entry><entry>
<para>Variable thats inputted, from uint23_t class</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Inputs int32_t and converts it to uint23_t internally </para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_int23__t_8hpp_1a97213726943c4e3c6a9143c106e45b1b"/><section>
    <title>UINT23_MAX</title>
<indexterm><primary>UINT23_MAX</primary><secondary>int23_t.hpp</secondary></indexterm>
<indexterm><primary>int23_t.hpp</primary><secondary>UINT23_MAX</secondary></indexterm>
<para><computeroutput>const uint23_t int23_t::UINT23_MAX(8388607) (8388607 )</computeroutput></para>
<para>The maximum value of integers of class uint23_t </para>
</section>
<anchor xml:id="_int23__t_8hpp_1a394f88afbad92f3475abf5beb64a0315"/><section>
    <title>UINT23_MIN</title>
<indexterm><primary>UINT23_MIN</primary><secondary>int23_t.hpp</secondary></indexterm>
<indexterm><primary>int23_t.hpp</primary><secondary>UINT23_MIN</secondary></indexterm>
<para><computeroutput>const uint23_t int23_t::UINT23_MIN(0) (0 )</computeroutput></para>
<para>The minimum value of integers of class uint23_t, 0 because it is unsigned </para>
</section>
</section>
</section>
