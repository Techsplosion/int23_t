<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_int23__t_8hpp_source" xml:lang="en-US">
<title>int23_t.hpp</title>
<indexterm><primary>include/int23_t.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;bitset&gt;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_shared_8hpp">shared.hpp</link>&quot;</emphasis>
13 <emphasis role="keyword">namespace&#32;</emphasis>int23_t&#32;{
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;{
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::bitset&lt;23&gt;&#32;<link linkend="_classint23__t_1_1int23__t_1ae3fdf9be3365ba77b3c60a7bbfef36a6">num</link>;&#32;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&lt;=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&lt;&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&gt;=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&gt;&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator+&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator-&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator*&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;T,&#32;typename&#32;std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,&#32;<emphasis role="keywordtype">int</emphasis>&gt;::type&#32;=&#32;0&gt;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;a);
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;T,&#32;typename&#32;std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,&#32;<emphasis role="keywordtype">int</emphasis>&gt;::type&#32;=&#32;0&gt;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;T&#32;()&#32;<emphasis role="keyword">const</emphasis>;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>();
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator&lt;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator&gt;&gt;&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator+=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator-=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator*=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator/=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator%=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator++&#32;();
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator--&#32;();
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator++&#32;(<emphasis role="keywordtype">int</emphasis>);
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator--&#32;(<emphasis role="keywordtype">int</emphasis>);
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator==&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator/&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator%&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator&gt;&gt;=&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator&lt;&lt;=&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator&amp;&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator|&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator^&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator&amp;=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator|=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;&#32;operator^=&#32;(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;std::string()&#32;<emphasis role="keyword">const</emphasis>;
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;operator~()&#32;<emphasis role="keyword">const</emphasis>;
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator!=(<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
229 &#32;&#32;&#32;&#32;};
230 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<link linkend="_int23__t_8hpp_1a9bab4903fba378abc1acdf4968312aa2">INT23_MAX</link>(8388607);&#32;
231 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<link linkend="_int23__t_8hpp_1a4bbaf0efec4846bf8f1f624114f52910">INT23_MIN</link>(0);&#32;
238 &#32;&#32;&#32;&#32;std::ostream&amp;&#32;operator&lt;&lt;&#32;(std::ostream&amp;out,&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;num);
245 &#32;&#32;&#32;&#32;std::istream&amp;&#32;operator&gt;&gt;&#32;(std::istream&amp;in,&#32;<link linkend="_classint23__t_1_1int23__t">int23_t</link>&amp;num);
246 }
</programlisting></section>
