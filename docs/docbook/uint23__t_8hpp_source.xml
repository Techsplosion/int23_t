<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_uint23__t_8hpp_source" xml:lang="en-US">
<title>uint23_t.hpp</title>
<indexterm><primary>include/uint23_t.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&lt;bitset&gt;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_shared_8hpp">shared.hpp</link>&quot;</emphasis>
13 <emphasis role="keyword">namespace&#32;</emphasis>int23_t&#32;{
15 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;{
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::bitset&lt;23&gt;&#32;<link linkend="_classint23__t_1_1uint23__t_1a5dbba6fb777d2065ea934416aabe8682">num</link>;&#32;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t_1ad51b39b609bbf0795b2f4e71c010ac66">operator&lt;= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t_1a7bed1e2bcf9681811fd26f5517d191b5">operator&lt; </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t_1a94661cc5c91f6166324a04b924ae8384">operator&gt;= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t_1ac442c28cbb31416e651f2497d81102a5">operator&gt; </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1ad0f2f7227ac42fa8900e2491a0ee8cdc">operator+ </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a29171ddcce02e2a475bdb4c55dd75740">operator- </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a2b9ff8feeef2f153718423610c9d81d2">operator* </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;T,&#32;typename&#32;std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,&#32;<emphasis role="keywordtype">int</emphasis>&gt;::type&#32;=&#32;0&gt;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t_1a61172647e7fb19e6bdcf5079b7b147c7">uint23_t</link>&#32;(T&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;a);
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&#32;&lt;typename&#32;T,&#32;typename&#32;std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,&#32;<emphasis role="keywordtype">int</emphasis>&gt;::type&#32;=&#32;0&gt;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;T&#32;()&#32;<emphasis role="keyword">const</emphasis>;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t_1a61172647e7fb19e6bdcf5079b7b147c7">uint23_t</link>();
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a70af7156a939eb8ba7de4f04e07187e7">operator&lt;&lt; </link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a5d83b3c00134b03455b3c6e823c3c120">operator&gt;&gt; </link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1a481b231de5db4cc6b54906f05018a75a">operator+= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1af1c153ec6ea441fc40d190c53487cdb3">operator-= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1a9a070fe5e8d807630d67f3b9a4249b66">operator*= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1acbcad2bdabd875ead20f69d4a5209a6f">operator/= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1aab9faa266b1f45f65a2fa2da63d328d9">operator%= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1af5f2c04bfc4ccb9e8ceadad4ac03a483">operator++ </link>();
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1a70574f4759c7087d4597bbd8141a0023">operator-- </link>();
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1af5f2c04bfc4ccb9e8ceadad4ac03a483">operator++ </link>(<emphasis role="keywordtype">int</emphasis>);
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a70574f4759c7087d4597bbd8141a0023">operator-- </link>(<emphasis role="keywordtype">int</emphasis>);
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t_1a94b492ea873722c57de6997d17ead8f1">operator== </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1af9a23f0211cd1107804f070cdd481736">operator/ </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1ad5adcae8522f4fef04c09a0d1760d181">operator% </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1ae1a8539d12895acf600fa221435da6bf">operator&gt;&gt;= </link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1a67f0b07bdfc9485c280534f28f48aa13">operator&lt;&lt;= </link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1aea39812100e815d12dd3bc451f922267">operator&amp; </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a7f2560da22c4e3a16d4bce9a8db0e505">operator| </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1accc256271e9a9f7702f9f76df8a37426">operator^ </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1aad69ac608385c5f712a8e62285c10341">operator&amp;= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1a6c478d390206801b05191f3e653de860">operator|= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;&#32;<link linkend="_classint23__t_1_1uint23__t_1ab05535887b8a002615de9ce1151ef89c">operator^= </link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs);
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;std::string()&#32;<emphasis role="keyword">const</emphasis>;
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_classint23__t_1_1uint23__t_1a05b9940c785029021e49c7de59b1c0ef">operator~</link>()&#32;<emphasis role="keyword">const</emphasis>;
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t_1a4e773df781c15f4fa0b37cd716fee678">operator!=</link>(<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>;
229 &#32;&#32;&#32;&#32;};
230 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_uint23__t_8hpp_1a97213726943c4e3c6a9143c106e45b1b">UINT23_MAX</link>(8388607);&#32;
231 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<link linkend="_uint23__t_8hpp_1a394f88afbad92f3475abf5beb64a0315">UINT23_MIN</link>(0);&#32;
238 &#32;&#32;&#32;&#32;std::ostream&amp;&#32;operator&lt;&lt;&#32;(std::ostream&amp;out,&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;num);
245 &#32;&#32;&#32;&#32;std::istream&amp;&#32;operator&gt;&gt;&#32;(std::istream&amp;in,&#32;<link linkend="_classint23__t_1_1uint23__t">uint23_t</link>&amp;num);
246 }
</programlisting></section>
